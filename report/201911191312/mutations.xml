<?xml version="1.0" encoding="UTF-8"?>
<mutations>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>AccountTest.java</sourceFile><mutatedClass>testing.AccountTest</mutatedClass><mutatedMethod>AccountCreate</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>14</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>20</index><block>1</block><killingTest/><description>removed call to org/junit/Assert::assertEquals</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>AccountTest.java</sourceFile><mutatedClass>testing.AccountTest</mutatedClass><mutatedMethod>AccountCreate</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>16</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>31</index><block>1</block><killingTest/><description>removed call to org/junit/Assert::assertEquals</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AccountTest.java</sourceFile><mutatedClass>testing.AccountTest</mutatedClass><mutatedMethod>addAmountAccount</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>23</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>13</index><block>2</block><killingTest>testing.AccountTest.addAmountAccount(testing.AccountTest)</killingTest><description>removed call to testing/Account::addAmount</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>AccountTest.java</sourceFile><mutatedClass>testing.AccountTest</mutatedClass><mutatedMethod>addAmountAccount</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>24</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>21</index><block>2</block><killingTest/><description>removed call to org/junit/Assert::assertEquals</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>AccountTest.java</sourceFile><mutatedClass>testing.AccountTest</mutatedClass><mutatedMethod>addAmountAccount</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>25</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>28</index><block>2</block><killingTest/><description>removed call to org/junit/Assert::assertEquals</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>AccountTest.java</sourceFile><mutatedClass>testing.AccountTest</mutatedClass><mutatedMethod>addSavingBal</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>58</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>17</index><block>5</block><killingTest/><description>removed call to org/junit/Assert::assertEquals</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AccountTest.java</sourceFile><mutatedClass>testing.AccountTest</mutatedClass><mutatedMethod>addSavingBal</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>59</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>22</index><block>5</block><killingTest>testing.AccountTest.addSavingBal(testing.AccountTest)</killingTest><description>removed call to testing/SavingsAccount::addSavingsBalance</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>AccountTest.java</sourceFile><mutatedClass>testing.AccountTest</mutatedClass><mutatedMethod>addSavingBal</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>60</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>30</index><block>5</block><killingTest/><description>removed call to org/junit/Assert::assertEquals</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>AccountTest.java</sourceFile><mutatedClass>testing.AccountTest</mutatedClass><mutatedMethod>addSavingBal</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>61</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>37</index><block>5</block><killingTest/><description>removed call to org/junit/Assert::assertEquals</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AccountTest.java</sourceFile><mutatedClass>testing.AccountTest</mutatedClass><mutatedMethod>openLoanAccount</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>48</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>15</index><block>4</block><killingTest>testing.AccountTest.openLoanAccount(testing.AccountTest)</killingTest><description>removed call to testing/LoanAccount::addMoney</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>AccountTest.java</sourceFile><mutatedClass>testing.AccountTest</mutatedClass><mutatedMethod>openLoanAccount</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>49</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>22</index><block>4</block><killingTest/><description>removed call to org/junit/Assert::assertEquals</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>AccountTest.java</sourceFile><mutatedClass>testing.AccountTest</mutatedClass><mutatedMethod>openLoanAccount</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>50</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>29</index><block>4</block><killingTest/><description>removed call to org/junit/Assert::assertEquals</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>AccountTest.java</sourceFile><mutatedClass>testing.AccountTest</mutatedClass><mutatedMethod>openLoanAccount</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>51</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>37</index><block>4</block><killingTest/><description>removed call to org/junit/Assert::assertEquals</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AccountTest.java</sourceFile><mutatedClass>testing.AccountTest</mutatedClass><mutatedMethod>withdrawFromAccount</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>32</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>13</index><block>3</block><killingTest>testing.AccountTest.withdrawFromAccount(testing.AccountTest)</killingTest><description>removed call to testing/Account::addAmount</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>AccountTest.java</sourceFile><mutatedClass>testing.AccountTest</mutatedClass><mutatedMethod>withdrawFromAccount</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>33</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>21</index><block>3</block><killingTest/><description>removed call to org/junit/Assert::assertEquals</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>AccountTest.java</sourceFile><mutatedClass>testing.AccountTest</mutatedClass><mutatedMethod>withdrawFromAccount</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>34</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>28</index><block>3</block><killingTest/><description>removed call to org/junit/Assert::assertEquals</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AccountTest.java</sourceFile><mutatedClass>testing.AccountTest</mutatedClass><mutatedMethod>withdrawFromAccount</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>35</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>33</index><block>3</block><killingTest>testing.AccountTest.withdrawFromAccount(testing.AccountTest)</killingTest><description>removed call to testing/Account::withdraw</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>AccountTest.java</sourceFile><mutatedClass>testing.AccountTest</mutatedClass><mutatedMethod>withdrawFromAccount</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>36</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>40</index><block>3</block><killingTest/><description>removed call to org/junit/Assert::assertEquals</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AccountTest.java</sourceFile><mutatedClass>testing.AccountTest</mutatedClass><mutatedMethod>withdrawFromAccount</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>38</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>45</index><block>3</block><killingTest>testing.AccountTest.withdrawFromAccount(testing.AccountTest)</killingTest><description>removed call to testing/Account::withdraw</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>AccountTest.java</sourceFile><mutatedClass>testing.AccountTest</mutatedClass><mutatedMethod>withdrawFromAccount</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>39</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>53</index><block>3</block><killingTest/><description>removed call to org/junit/Assert::assertEquals</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>LoanAccount.java</sourceFile><mutatedClass>testing.LoanAccount</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(IILjava/lang/String;)V</methodDescription><lineNumber>14</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>24</index><block>0</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>LoanAccount.java</sourceFile><mutatedClass>testing.LoanAccount</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(IILjava/lang/String;)V</methodDescription><lineNumber>14</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>24</index><block>0</block><killingTest>testing.AccountTest.openLoanAccount(testing.AccountTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>LoanAccount.java</sourceFile><mutatedClass>testing.LoanAccount</mutatedClass><mutatedMethod>addMoney</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>22</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>21</index><block>2</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>LoanAccount.java</sourceFile><mutatedClass>testing.LoanAccount</mutatedClass><mutatedMethod>addMoney</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>20</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>7</index><block>2</block><killingTest>testing.AccountTest.openLoanAccount(testing.AccountTest)</killingTest><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>LoanAccount.java</sourceFile><mutatedClass>testing.LoanAccount</mutatedClass><mutatedMethod>addMoney</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>21</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>15</index><block>2</block><killingTest>testing.AccountTest.openLoanAccount(testing.AccountTest)</killingTest><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>LoanAccount.java</sourceFile><mutatedClass>testing.LoanAccount</mutatedClass><mutatedMethod>addMoney</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>22</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>21</index><block>2</block><killingTest>testing.AccountTest.openLoanAccount(testing.AccountTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>LoanAccount.java</sourceFile><mutatedClass>testing.LoanAccount</mutatedClass><mutatedMethod>addMoney</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>22</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>24</index><block>3</block><killingTest>testing.AccountTest.openLoanAccount(testing.AccountTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>LoanAccount.java</sourceFile><mutatedClass>testing.LoanAccount</mutatedClass><mutatedMethod>getLoanBalance</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>33</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>5</index><block>6</block><killingTest>testing.AccountTest.openLoanAccount(testing.AccountTest)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>LoanAccount.java</sourceFile><mutatedClass>testing.LoanAccount</mutatedClass><mutatedMethod>getRemainingInstallments</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>28</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>5</index><block>5</block><killingTest>testing.AccountTest.openLoanAccount(testing.AccountTest)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>Account.java</sourceFile><mutatedClass>testing.Account</mutatedClass><mutatedMethod>addAmount</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>33</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>13</index><block>4</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Account.java</sourceFile><mutatedClass>testing.Account</mutatedClass><mutatedMethod>addAmount</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>32</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>7</index><block>4</block><killingTest>testing.AccountTest.addAmountAccount(testing.AccountTest)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Account.java</sourceFile><mutatedClass>testing.Account</mutatedClass><mutatedMethod>addAmount</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>33</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>13</index><block>4</block><killingTest>testing.AccountTest.addAmountAccount(testing.AccountTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Account.java</sourceFile><mutatedClass>testing.Account</mutatedClass><mutatedMethod>getBalance</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>17</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>5</index><block>1</block><killingTest>testing.AccountTest.addAmountAccount(testing.AccountTest)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Account.java</sourceFile><mutatedClass>testing.Account</mutatedClass><mutatedMethod>getStatus</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>38</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>5</index><block>6</block><killingTest>testing.AccountTest.addSavingBal(testing.AccountTest)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>Account.java</sourceFile><mutatedClass>testing.Account</mutatedClass><mutatedMethod>withdraw</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>23</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>13</index><block>2</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Account.java</sourceFile><mutatedClass>testing.Account</mutatedClass><mutatedMethod>withdraw</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>22</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>7</index><block>2</block><killingTest>testing.AccountTest.withdrawFromAccount(testing.AccountTest)</killingTest><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Account.java</sourceFile><mutatedClass>testing.Account</mutatedClass><mutatedMethod>withdraw</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>23</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>13</index><block>2</block><killingTest>testing.AccountTest.withdrawFromAccount(testing.AccountTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>SavingsAccount.java</sourceFile><mutatedClass>testing.SavingsAccount</mutatedClass><mutatedMethod>addSavingsBalance</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>25</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>13</index><block>3</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SavingsAccount.java</sourceFile><mutatedClass>testing.SavingsAccount</mutatedClass><mutatedMethod>addSavingsBalance</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>24</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>7</index><block>3</block><killingTest>testing.AccountTest.addSavingBal(testing.AccountTest)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SavingsAccount.java</sourceFile><mutatedClass>testing.SavingsAccount</mutatedClass><mutatedMethod>addSavingsBalance</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>25</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>13</index><block>3</block><killingTest>testing.AccountTest.addSavingBal(testing.AccountTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SavingsAccount.java</sourceFile><mutatedClass>testing.SavingsAccount</mutatedClass><mutatedMethod>getRateOfInterest</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>30</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>5</index><block>5</block><killingTest>testing.AccountTest.addSavingBal(testing.AccountTest)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>SavingsAccount.java</sourceFile><mutatedClass>testing.SavingsAccount</mutatedClass><mutatedMethod>getSavingsBalance</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>15</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>5</index><block>1</block><killingTest/><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
</mutations>
